schema_version: 1

context:
  name: pybamm
  version: 24.11.2
  python_min: 3.9
  python_max: 3.13

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/${{ name[0] }}/${{ name }}/${{ name }}-${{ version }}.tar.gz
  sha256: 5ce20c13d61c4dc9f142381a38f38d60e778c167d2683003688cefa754ba9e12

build:
  number: 2

outputs:
  - name: pybamm-base
    build:
      noarch: python
      script: python -m pip install . -vv --no-deps --no-build-isolation

    requirements:
      host:
        - pip
        - python ${{ python_min }}
        - setuptools >=64
        # See https://github.com/conda-forge/pybamm-feedstock/pull/70/files#r1876438836
        # - wheel
      run:
        - python >=${{ python_min }},<${{ python_max }}
        - anytree >=2.8.0
        - casadi >=3.6.7
        - posthog >=3.6.5
        - numpy >=1.23.5,<2.0.0
        - pandas >=1.5.0
        - pooch >=1.8.1
        - scipy >=1.11.4
        - sympy >=1.12
        - typing-extensions >=4.10.0
        - xarray >=2022.6.0
        - pyyaml
        - platformdirs

    test:
      imports:
        - pybamm
        - pybamm.discretisations
        - pybamm.experiment
        - pybamm.experiment.step
        - pybamm.expression_tree
        - pybamm.expression_tree.operations
        - pybamm.expression_tree.printing
        - pybamm.geometry
        - pybamm.meshes
        - pybamm.models
        - pybamm.models.full_battery_models
        - pybamm.models.full_battery_models.equivalent_circuit
        - pybamm.models.full_battery_models.lead_acid
        - pybamm.models.full_battery_models.lithium_ion
        # See https://github.com/pybamm-team/PyBaMM/issues/1905
        # - pybamm.models.full_battery_models.lithium_metal
        - pybamm.models.submodels
        - pybamm.models.submodels.active_material
        - pybamm.models.submodels.convection
        - pybamm.models.submodels.convection.through_cell
        - pybamm.models.submodels.convection.transverse
        - pybamm.models.submodels.current_collector
        - pybamm.models.submodels.electrode
        - pybamm.models.submodels.electrode.ohm
        - pybamm.models.submodels.electrolyte_conductivity
        - pybamm.models.submodels.electrolyte_conductivity.surface_potential_form
        - pybamm.models.submodels.electrolyte_diffusion
        - pybamm.models.submodels.equivalent_circuit_elements
        - pybamm.models.submodels.external_circuit
        - pybamm.models.submodels.interface
        - pybamm.models.submodels.interface.interface_utilisation
        - pybamm.models.submodels.interface.kinetics
        - pybamm.models.submodels.interface.kinetics.inverse_kinetics
        - pybamm.models.submodels.interface.lithium_plating
        - pybamm.models.submodels.interface.open_circuit_potential
        - pybamm.models.submodels.interface.sei
        - pybamm.models.submodels.oxygen_diffusion
        - pybamm.models.submodels.particle
        - pybamm.models.submodels.particle_mechanics
        - pybamm.models.submodels.porosity
        - pybamm.models.submodels.thermal
        - pybamm.models.submodels.thermal.pouch_cell
        - pybamm.models.submodels.transport_efficiency
        - pybamm.parameters
        - pybamm.plotting
        - pybamm.solvers
        - pybamm.solvers.c_solvers
        - pybamm.spatial_methods
      requires:
        - pip
        - python ${{ python_min }}
      commands:
        - pip check

  - name: pybamm
    build:
      noarch: python

    requirements:
      run:
        - ${{ pin_subpackage('pybamm-base', exact=True) }}
        # Battery Parameter eXchange format
        - bpx
        # Progress bars
        - tqdm
        # Plotting
        - imageio >=2.3.0
        - matplotlib-base >=3.6.0
        # Cite
        - pybtex >=0.24.0
        # JAX
        - jax 0.4.27
        - jaxlib 0.4.27
        # Other dependencies
        - scikit-fem >=8.1.0
        # - iree-compiler -- not available on conda

    test:
      imports:
        - pybamm
        - pybamm.discretisations
        - pybamm.experiment
        - pybamm.experiment.step
        - pybamm.expression_tree
        - pybamm.expression_tree.operations
        - pybamm.expression_tree.printing
        - pybamm.geometry
        - pybamm.meshes
        - pybamm.models
        - pybamm.models.full_battery_models
        - pybamm.models.full_battery_models.equivalent_circuit
        - pybamm.models.full_battery_models.lead_acid
        - pybamm.models.full_battery_models.lithium_ion
        # See https://github.com/pybamm-team/PyBaMM/issues/1905
        # - pybamm.models.full_battery_models.lithium_metal
        - pybamm.models.submodels
        - pybamm.models.submodels.active_material
        - pybamm.models.submodels.convection
        - pybamm.models.submodels.convection.through_cell
        - pybamm.models.submodels.convection.transverse
        - pybamm.models.submodels.current_collector
        - pybamm.models.submodels.electrode
        - pybamm.models.submodels.electrode.ohm
        - pybamm.models.submodels.electrolyte_conductivity
        - pybamm.models.submodels.electrolyte_conductivity.surface_potential_form
        - pybamm.models.submodels.electrolyte_diffusion
        - pybamm.models.submodels.equivalent_circuit_elements
        - pybamm.models.submodels.external_circuit
        - pybamm.models.submodels.interface
        - pybamm.models.submodels.interface.interface_utilisation
        - pybamm.models.submodels.interface.kinetics
        - pybamm.models.submodels.interface.kinetics.inverse_kinetics
        - pybamm.models.submodels.interface.lithium_plating
        - pybamm.models.submodels.interface.open_circuit_potential
        - pybamm.models.submodels.interface.sei
        - pybamm.models.submodels.oxygen_diffusion
        - pybamm.models.submodels.particle
        - pybamm.models.submodels.particle_mechanics
        - pybamm.models.submodels.porosity
        - pybamm.models.submodels.thermal
        - pybamm.models.submodels.thermal.pouch_cell
        - pybamm.models.submodels.transport_efficiency
        - pybamm.parameters
        - pybamm.plotting
        - pybamm.solvers
        - pybamm.solvers.c_solvers
        - pybamm.spatial_methods
      requires:
        - pip
        - python ${{ python_min }}
      commands:
        - pip check

about:
  home: https://github.com/pybamm-team/PyBaMM/
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: Python Battery Mathematical Modelling
  doc_url: https://docs.pybamm.org/en/latest/
  dev_url: https://github.com/pybamm-team/PyBaMM/

extra:
  recipe-maintainers:
    - valentinsulzer
    - Saransh-cpp
    - agriyakhetarpal
    - priyanshuone6
    - tlestang
